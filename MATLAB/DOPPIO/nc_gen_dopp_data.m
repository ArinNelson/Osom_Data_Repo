function status = nc_gen_dopp_data(file_name,ni,nj,nz,var_name)

    % NetCDF constants
    c_unlimited = netcdf.getConstant('NC_UNLIMITED');
    c_global    = netcdf.getConstant('GLOBAL');

    % Init
    ncid = netcdf.create(file_name,'NETCDF4');
  
    % Set the global attributes
    netcdf.putAtt(ncid,c_global,'type','DATA file');
    netcdf.putAtt(ncid,c_global,'title','Data file, DOPPIO ''best'' product');
    netcdf.putAtt(ncid,c_global,'history',['generated by nc_gen_dopp_data.m on ' datestr(now)]);
  
    % Set the dimensions
    dimid = [];
    dimid(end+1) = netcdf.defDim(ncid,'xi_rho', ni);
    dimid(end+1) = netcdf.defDim(ncid,'xi_u',   ni-1);
    dimid(end+1) = netcdf.defDim(ncid,'xi_v',   ni);
    dimid(end+1) = netcdf.defDim(ncid,'eta_rho',nj);
    dimid(end+1) = netcdf.defDim(ncid,'eta_u',  nj);
    dimid(end+1) = netcdf.defDim(ncid,'eta_v',  nj-1);
    dimid(end+1) = netcdf.defDim(ncid,'s_rho',  nz);
    %dimid(end+1) = netcdf.defDim(ncid,'s_w',    nz+1);
    dimid(end+1) = netcdf.defDim(ncid,'time',   c_unlimited);
    
    % Time variable
    varid = [];
    varid(end+1) = netcdf.defVar(ncid,'time','NC_DOUBLE',dimid(end));
        netcdf.putAtt(ncid,varid(end),'long_name','matlab datenum');
        netcdf.putAtt(ncid,varid(end),'units','days since 00-Jan-0000');  
    
    % Loop through defined variables
    for iv=1:numel(var_name)
    switch var_name{iv}

        case 'zeta'
            varid(end+1) = netcdf.defVar(ncid,'zeta','NC_DOUBLE',[dimid(1) dimid(4) dimid(end)]);
                netcdf.putAtt(ncid,varid(end),'long_name','free-surface');
                netcdf.putAtt(ncid,varid(end),'units','meters');
                netcdf.putAtt(ncid,varid(end),'coordinates','lon_rho, lat_rho, time');

        case 'ubar'
            varid(end+1) = netcdf.defVar(ncid,'ubar','NC_DOUBLE',[dimid(2) dimid(5) dimid(end)]);
                netcdf.putAtt(ncid,varid(end),'long_name','vertically-integrated u-momentum component');
                netcdf.putAtt(ncid,varid(end),'units','meters second-1');
                netcdf.putAtt(ncid,varid(end),'coordinates','lon_u, lat_u, time');
        
        case 'vbar'
            varid(end+1) = netcdf.defVar(ncid,'vbar','NC_DOUBLE',[dimid(3) dimid(6) dimid(end)]);
                netcdf.putAtt(ncid,varid(end),'long_name','vertically-integrated v-momentum component');
                netcdf.putAtt(ncid,varid(end),'units','meters second-1');
                netcdf.putAtt(ncid,varid(end),'coordinates','lon_v, lat_v, time');

        case 'u'
            varid(end+1) = netcdf.defVar(ncid,'u','NC_DOUBLE',[dimid(2) dimid(5) dimid(7) dimid(end)]);
                netcdf.putAtt(ncid,varid(end),'long_name','u-momentum component');
                netcdf.putAtt(ncid,varid(end),'units','meters second-1');
                netcdf.putAtt(ncid,varid(end),'coordinates','lon_u, lat_u, s_rho, time');

        case 'v'
            varid(end+1) = netcdf.defVar(ncid,'v','NC_DOUBLE',[dimid(3) dimid(6) dimid(7) dimid(end)]);
                netcdf.putAtt(ncid,varid(end),'long_name','v-momentum component');
                netcdf.putAtt(ncid,varid(end),'units','meters second-1');
                netcdf.putAtt(ncid,varid(end),'coordinates','lon_v, lat_v, s_rho, time');

        case 'temp'
            varid(end+1) = netcdf.defVar(ncid,'temp','NC_DOUBLE',[dimid(1) dimid(4) dimid(7) dimid(end)]);
                netcdf.putAtt(ncid,varid(end),'long_name','temperature');
                netcdf.putAtt(ncid,varid(end),'units','Celsius');
                netcdf.putAtt(ncid,varid(end),'coordinates','lon_rho, lat_rho, s_rho, time');

        case 'salt'
            varid(end+1) = netcdf.defVar(ncid,'salt','NC_DOUBLE',[dimid(1) dimid(4) dimid(7) dimid(end)]);
                netcdf.putAtt(ncid,varid(end),'long_name','salinity');
                netcdf.putAtt(ncid,varid(end),'units','g/kg');
                netcdf.putAtt(ncid,varid(end),'coordinates','lon_rho, lat_rho, s_rho, time');

    otherwise, error(['Unknown or unimplemented variable: ' var_name{iv}]);
    end
    end
    clear iv;
    
    % End definitions
    netcdf.endDef(ncid);
    netcdf.close(ncid);
    
    % Success!
    status = 1;

end